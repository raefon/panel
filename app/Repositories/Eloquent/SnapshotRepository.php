<?php

namespace Kubectyl\Repositories\Eloquent;

use Carbon\Carbon;
use Kubectyl\Models\Server;
use Kubectyl\Models\Snapshot;
use Illuminate\Support\Collection;
use Illuminate\Database\Eloquent\Relations\HasMany;

class SnapshotRepository extends EloquentRepository
{
    public function model(): string
    {
        return Snapshot::class;
    }

    /**
     * Determines if too many snapshots have been generated by the server.
     */
    public function getSnapshotsGeneratedDuringTimespan(int $server, int $seconds = 600): array|Collection
    {
        return $this->getBuilder()
            ->withTrashed()
            ->where('server_id', $server)
            ->where(function ($query) {
                $query->whereNull('completed_at')
                    ->orWhere('is_successful', '=', true);
            })
            ->where('created_at', '>=', Carbon::now()->subSeconds($seconds)->toDateTimeString())
            ->get()
            ->toBase();
    }

    /**
     * Returns a query filtering only non-failed snapshots for a specific server.
     */
    public function getNonFailedSnapshots(Server $server): HasMany
    {
        return $server->snapshots()->where(function ($query) {
            $query->whereNull('completed_at')
                ->orWhere('is_successful', true);
        });
    }
}
